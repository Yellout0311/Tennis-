// Generated by view binder compiler. Do not edit!
package com.example.tennis.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.ScrollView;
import android.widget.TimePicker;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.tennis.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogReservationBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final EditText etCourtNumber;

  @NonNull
  public final EditText etMemo;

  @NonNull
  public final RadioGroup radioGroup;

  @NonNull
  public final RadioButton rbBookingDate;

  @NonNull
  public final RadioButton rbReservationDate;

  @NonNull
  public final TimePicker timePicker;

  private DialogReservationBinding(@NonNull ScrollView rootView, @NonNull EditText etCourtNumber,
      @NonNull EditText etMemo, @NonNull RadioGroup radioGroup, @NonNull RadioButton rbBookingDate,
      @NonNull RadioButton rbReservationDate, @NonNull TimePicker timePicker) {
    this.rootView = rootView;
    this.etCourtNumber = etCourtNumber;
    this.etMemo = etMemo;
    this.radioGroup = radioGroup;
    this.rbBookingDate = rbBookingDate;
    this.rbReservationDate = rbReservationDate;
    this.timePicker = timePicker;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogReservationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogReservationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_reservation, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogReservationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.etCourtNumber;
      EditText etCourtNumber = ViewBindings.findChildViewById(rootView, id);
      if (etCourtNumber == null) {
        break missingId;
      }

      id = R.id.etMemo;
      EditText etMemo = ViewBindings.findChildViewById(rootView, id);
      if (etMemo == null) {
        break missingId;
      }

      id = R.id.radioGroup;
      RadioGroup radioGroup = ViewBindings.findChildViewById(rootView, id);
      if (radioGroup == null) {
        break missingId;
      }

      id = R.id.rbBookingDate;
      RadioButton rbBookingDate = ViewBindings.findChildViewById(rootView, id);
      if (rbBookingDate == null) {
        break missingId;
      }

      id = R.id.rbReservationDate;
      RadioButton rbReservationDate = ViewBindings.findChildViewById(rootView, id);
      if (rbReservationDate == null) {
        break missingId;
      }

      id = R.id.timePicker;
      TimePicker timePicker = ViewBindings.findChildViewById(rootView, id);
      if (timePicker == null) {
        break missingId;
      }

      return new DialogReservationBinding((ScrollView) rootView, etCourtNumber, etMemo, radioGroup,
          rbBookingDate, rbReservationDate, timePicker);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
